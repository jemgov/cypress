pipeline {
  agent any
  tools {
    nodejs "NodeJS 25"
  }
  parameters {
    string(name: 'TEST_SPEC', defaultValue: 'e2e/1-getting-started/PRUEBAS/login.cy.js', description: 'Ruta del test o tests a ejecutar')
  }
  stages {
    stage('Instalar dependencias') {
      steps {
        timeout(time: 5, unit: 'MINUTES') {
          dir('mi-proyecto-cypress') {
            powershell """
            Write-Host '=== Iniciando instalación de dependencias ==='
            npm install
            Write-Host '=== npm install finalizado ==='
            """
          }
        }
      }
    }
    stage('Ejecutar pruebas') {
      steps {
        timeout(time: 10, unit: 'MINUTES') {
          dir('mi-proyecto-cypress') {
            powershell """
            Write-Host '=== Ejecutando pruebas Cypress ==='
            npx cypress run --spec "${params.TEST_SPEC}"
            Write-Host '=== Cypress finalizado ==='
            """
          }
        }
      }
    }
    stage('Generar reporte') {
      steps {
        dir('mi-proyecto-cypress') {
          powershell """
          Write-Host '=== Generando reporte HTML ==='
          $json = npx mochawesome-merge cypress/report/*.json
          [System.IO.File]::WriteAllText("mochawesome.json", $json, [System.Text.Encoding]::UTF8)
          npx marge mochawesome.json --reportDir cypress/report --inline
          Write-Host '=== Reporte generado en cypress/report/index.html ==='
          """
        }
      }
    }
  }
  post {
    always {
      echo '=== Pipeline finalizado ==='
      archiveArtifacts artifacts: 'mi-proyecto-cypress/cypress/report/index.html', fingerprint: true
    }
    success {
      echo '✅ Todos los pasos se completaron correctamente.'
    }
    failure {
      echo '❌ El pipeline falló. Revisa los logs para más detalles.'
    }
  }
}
