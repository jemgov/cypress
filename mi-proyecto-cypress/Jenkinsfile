pipeline {
  agent any
  tools {
    nodejs "NodeJS 25"
  }
  parameters {
    string(name: 'TEST_SPEC', defaultValue: 'e2e/1-getting-started/PRUEBAS/login.cy.js', description: 'Ruta del test o tests a ejecutar')
  }
  stages {
    stage('Instalar dependencias') {
      steps {
        timeout(time: 5, unit: 'MINUTES') {
          dir('mi-proyecto-cypress') {
            powershell '''
            Write-Host "=== Iniciando instalación de dependencias ==="
            npm install
            Write-Host "=== npm install finalizado ==="
            '''
          }
        }
      }
    }
    stage('Ejecutar pruebas') {
      steps {
        timeout(time: 10, unit: 'MINUTES') {
          dir('mi-proyecto-cypress') {
            powershell '''
            Write-Host "=== Ejecutando pruebas Cypress ==="
            npx cypress run --spec "$env:TEST_SPEC"
            Write-Host "=== Cypress finalizado ==="
            '''
          }
        }
      }
    }
    stage('Generar reporte') {
      steps {
        dir('mi-proyecto-cypress') {
          powershell '''
          Write-Host "=== Generando reporte HTML ==="

          $jsonFiles = Get-ChildItem -Path cypress/report -Filter *.json
          if ($jsonFiles.Count -eq 0) {
            Write-Host "⚠️ No se encontraron archivos JSON para fusionar. Se omite la generación del reporte."
            exit 0
          }

          $json = npx mochawesome-merge cypress/report/*.json
          if (-not $json -or $json -match "Unexpected token" -or $json -match '"results"\s*:\s*

\[\s*\]

') {
            Write-Host "⚠️ El contenido fusionado está vacío o malformado. No se generará el HTML."
            exit 0
          }

          $json | Set-Content -Encoding utf8NoBOM mochawesome.json
          npx marge mochawesome.json --reportDir cypress/report --inline

          Write-Host "✅ Reporte generado en cypress/report/index.html"
          exit 0
          '''
        }
      }
    }
  }
  post {
    always {
      echo '=== Pipeline finalizado ==='
      archiveArtifacts artifacts: 'mi-proyecto-cypress/cypress/report/**', fingerprint: true
      publishHTML([
        reportDir: 'mi-proyecto-cypress/cypress/report',
        reportFiles: 'index.html',
        reportName: 'Reporte Cypress',
        keepAll: true,
        alwaysLinkToLastBuild: true,
        allowMissing: false
      ])
    }
    success {
      echo '✅ Todos los pasos se completaron correctamente.'
    }
    failure {
      echo '❌ El pipeline falló. Revisa los logs para más detalles.'
    }
  }
}
